"use strict";var e=require("dd-trace");function t(e){var t=Object.create(null);return e&&Object.keys(e).forEach((function(s){if("default"!==s){var r=Object.getOwnPropertyDescriptor(e,s);Object.defineProperty(t,s,r.get?r:{enumerable:!0,get:function(){return e[s]}})}})),t.default=e,Object.freeze(t)}var s,r,i=t(require("prom-client"));function c(e,t,s){const r={Resolver:s.Resolver,Service:s.Service,Protocol:s.Protocol,Result:s.Result};e.Histogram("resolver_request_duration_histogram_milliseconds",t,r)}function o(e,t,s){const r={Service:s.Service,Vendor:s.Vendor,Call:s.Call,Result:s.Result};e.Histogram("api_request_duration_histogram_milliseconds",t,r)}function a(e,t){return(s,r,i)=>{const c=Date.now();r.on("finish",(()=>{const s=Date.now(),r={Service:t.Service};e.Histogram("http_request_duration_histogram_milliseconds",s-c,r)})),i()}}function n(e,t,s){const r={Service:s.Service,Function:s.Function,Result:s.Result};e.Histogram("call_duration_histogram_milliseconds",t,r)}function u(e,t,s){const r={Service:s.Service,Table:s.Table,Method:s.Method,Result:s.Result};e.Histogram("database_duration_histogram_milliseconds",t,r)}!function(e){e.Insert="insert",e.Update="update",e.Delete="delete",e.Select="select"}(s||(s={}));class l{constructor(e){this.client=e}static getInstance(e){return l.instance||(l.instance=new l(e)),l.instance}Histogram(e,t,s){this.client.Histogram(e,t,s)}Count(e,t){this.client.Count(e,t)}Gauge(e,t,s){this.client.Gauge(e,t,s)}Summary(e,t,s){this.client.Summary(e,t,s)}ResolverMetric(e,t){return c(this.client,e,t)}ApiMetric(e,t){return o(this.client,e,t)}HttpMiddlewareMetric(e){return a(this.client,e)}CallMetric(e,t){return n(this.client,e,t)}DatabaseMetric(e,t){return u(this.client,e,t)}}exports.Result=void 0,(r=exports.Result||(exports.Result={})).Success="success",r.Error="error";exports.ApiMetric=o,exports.CallMetric=n,exports.DataDogClient=class{constructor(){e.init()}Count(t,s,r=1){e.dogstatsd.increment(t,r,s)}Histogram(t,s,r,i=1){e.dogstatsd.distribution(t,s,r)}Gauge(t,s,r,i=1){e.dogstatsd.gauge(t,s,r)}Summary(e,t,s,r=1){console.log("Summary is unsupported")}},exports.DatabaseMetric=u,exports.HttpMiddlewareMetric=a,exports.Metrics=l,exports.PrometheusClient=class{constructor(){this.HistogramVecs={},this.CounterVecs={},this.GaugeVecs={},this.SummaryVecs={}}CreateHistogramVec(e,t,s,r){this.HistogramVecs[e]||(this.HistogramVecs[e]={Labels:s,Metric:new i.Histogram({name:e,help:t,labelNames:s,buckets:r})})}CreateCounterVec(e,t,s){this.CounterVecs[e]||(this.CounterVecs[e]={Labels:s,Metric:new i.Counter({name:e,help:t,labelNames:s})})}CreateGaugeVec(e,t,s){this.GaugeVecs[e]||(this.GaugeVecs[e]={Labels:s,Metric:new i.Gauge({name:e,help:t,labelNames:s})})}CreateSummaryVec(e,t,s){this.SummaryVecs[e]||(this.SummaryVecs[e]={Labels:s,Metric:new i.Summary({name:e,help:t,labelNames:s})})}Histogram(e,t,s){const r=Object.keys(s);this.HistogramVecs[e]||this.CreateHistogramVec(e,e,r);const i=[];for(const t of this.HistogramVecs[e].Labels)i.push(s[t]);this.HistogramVecs[e].Metric.labels(...i).observe(t)}Count(e,t){const s=Object.keys(t);this.CounterVecs[e]||this.CreateCounterVec(e,e,s);const r=[];for(const s of this.CounterVecs[e].Labels)r.push(t[s]);this.CounterVecs[e].Metric.labels(...r).inc()}Gauge(e,t,s){const r=Object.keys(s);this.GaugeVecs[e]||this.CreateGaugeVec(e,e,r);const i=[];for(const t of this.GaugeVecs[e].Labels)i.push(s[t]);this.GaugeVecs[e].Metric.labels(...i).set(t)}Summary(e,t,s){const r=Object.keys(s);this.SummaryVecs[e]||this.CreateSummaryVec(e,e,r);const i=[];for(const t of this.SummaryVecs[e].Labels)i.push(s[t]);this.SummaryVecs[e].Metric.labels(...i).observe(t)}},exports.ResolverMetric=c;
